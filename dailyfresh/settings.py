"""
Django settings for dailyfresh project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR=os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY='sy5r3xxm6y(5p*t)0$^!$=+9-j56um16%*ecq(#==&4-y&9)vo'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG=True

ALLOWED_HOSTS=['*', ]

# Application definition

INSTALLED_APPS=[
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tinymce',  # 富文本编辑器
    'haystack', # 注册全文检索框架模块
    'apps.user',  # 用户模块
    'apps.goods',  # 商品模块
    'apps.cart',  # 购物车模块
    'apps.order',  # 订单模块
]

MIDDLEWARE=[
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF='dailyfresh.urls'

TEMPLATES=[
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION='dailyfresh.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES={
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "dailyfresh",  # 要连接的数据库，连接前需要创建好
        'USER': 'root',  # 连接数据库的用户名
        'PASSWORD': 'root',  # 连接数据库的密码
        'HOST': '49.234.214.32',  # 连接主机，默认本机
        'PORT': 3306,  # 端口为8090
        'OPTIONS': {
            'isolation_level': None,
            'init_command': 'SET sql_mode="STRICT_TRANS_TABLES"',
            'charset': 'utf8mb4'
        }
    }
}
# django认证系统使用的模型类
AUTH_USER_MODEL='user.User'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS=[
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE='zh-hans'

TIME_ZONE='Asia/Shanghai'

USE_I18N=True

USE_L10N=True

USE_TZ=True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL='/static/'
STATICFILES_DIRS=[os.path.join(BASE_DIR, 'static')]

# 富文本编辑器配置
TINYMCE_DEFAULT_CONFIG={
    'theme': 'advanced',
    'width': 600,
    'height': 400,
}
USE_TZ=False
EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
# 是否使用TLS安全传输协议 TLS与SSL互斥
# EMAIL_USE_TLS = emailCfg['tls']
# 是否使用SSL加密，qq企业邮箱要求使用
# EMAIL_USE_SSL = emailCfg['ssl']
# 发送邮件的邮箱 的 SMTP服务器
EMAIL_HOST='smtp.qq.com'
# 发件箱的SMTP服务器端口
EMAIL_PORT=587
# 发送邮件的邮箱地址
EMAIL_HOST_USER='kxjiang01@qq.com'
# 发送邮件的邮箱密码(授权密码)
# EMAIL_HOST_PASSWORD = 'kxjiang1021'
EMAIL_HOST_PASSWORD='fjmprxwwudsfgcfa'
# 收件人看到的发件人
EMAIL_FROM='python<kxjiang01@qq.com>'

# django的缓存配置
CACHES={
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://62.234.90.228:6400/9",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# django的session配置
SESSION_ENGINE="django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS="default"
# 登录地址的配置
LOGIN_URL='/user/login'
# 默认上传文件调用的类修改为自己写的
DEFAULT_FILE_STORAGE='utils.fdfs.storage.FDFSStorage'
# fdfs的客户端连接配置文件
FDFS_DEFAULT_CONF='./utils/fdfs/client.conf'
# fdfs的服务器ip与端口号
FDFS_BASE_HOST_PORT='http://62.234.90.228:8888/'

# 全文检索框架的配置
HAYSTACK_CONNECTIONS = {
    'default':{
        # 使用whoosh引擎
        'ENGINE':'haystack.backends.whoosh_cn_backend.WhooshEngine',
        # 索引文件路径
        'PATH':os.path.join(BASE_DIR,'whoosh_index'),
    }
}
# 当添加，修改，删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'